<!DOCTYPE html>
<html>
<head>
    <base href=" ${basepath}">
    <meta name="viewport" content="width=device-width" />
    <title>工作台</title>

<#include "/public_css.ftl" >
    <link rel="stylesheet" href="css/model/rygj.css">
</head>
<body style="background-color:#fafafa">
<div class="filtrate-wrapper" >
<div class="row clearfix">
    <form role="form" class="select-box border-bottom-style"  style="align="left"">
        <table id="data_1">
            <tr>
                <td class="control-label" >设备名称：</td>
                <td class="input-group date">
                    <div class="input-group" style="width:300px">
                        <input type="text" class="form-control" id="equipment_id">
                        <div class="input-group-btn">
                            <button type="button" class="btn btn-white dropdown-toggle" data-toggle="dropdown">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-right" role="menu"></ul>
                        </div>
                    </div>
                </td>
                <td >
                    <input class="lf-btn blue-btn btn-primary" type="button" id="dingshibtn" value="定时刷新开" onclick="dingshikai(this)" />
                        <a class="lf-btn blue-btn btn-primary" onclick="loadWorkBench()" >马上刷新</a>
                </td>
            </tr>
        </table>
    </form>
    <div class="col-md-9">
        <div id="main" style="width: 100%;height:400px;"></div>
    </div>
    
     <div class="col-md-3 form-horizontal" style="height:400px;align-content:left">
        <div id="lidtmCreate"> <h4 style="align-content:left">实时数据</h4></div>
        <ul class="list-horizontal" style="font-size: 15px; ">
            <li id="lip001">数据时间:</li>
            <li id="lip002">PM2.5:</li>
            <li id="lip003">PM10</li>
            <li id="lip009">PM100:</li>
            <li id="lip006">温度:</li>
            <li id="lip007">湿度:</li>
            <li id="lip005">风向:</li>
            <li id="lip0011">风速:</li>
            <li id="lip008">噪声:</li>
            <li id="lip010">气压:</li>
        </ul>
    </div>
    
    <div class="col-md-3 column">
        <div id="meter1" style="width: 100%;height:400px;"></div>
    </div>
    
    <div class="col-md-3 column">
        <div id="meter2" style="width: 100%;height:400px;"></div>
    </div>
    
    <div class="col-md-3 column">
        <div id="meter3" style="width: 100%;height:400px;"></div>
    </div>
     <div class="col-md-3 form-horizontal" style="height:400px;align-content:left">
        <div id="lidtmCreate"> <h4 style="align-content:left">项目信息</h4></div>
        <ul class="list-horizontal" style="font-size: 15px; ">
            <li id="liadd">项目地址:</li>
            <li id="licmp">公司名称:</li>
            <li id="litel">联系电话:</li>
        </ul>
    </div>
</div>
</div>

</body>
<#include "/public_js.ftl" >
<script src="js/plugins/echarts/echarts.min.js"></script>
<script type="text/javascript">
function loadWorkBench() {
    var eid=$("#equipment_id").val();
    $.ajax({
        type:'post',
        url:'Equipment_data/Equipment_getID.htm',
        data:{
        	"vEquipmentName":eid,
        	"shu":10
        },
        cache:false,
        dataType:'json',
        success:function(data){
            if( data.msg =="true" ) //服务器返回false，就将validatePassword2的值改为pwd2Error，这是异步，需要考虑返回时间
            {
                var objlist=data.objlist;
                var objdata=data.objdata;
                var datezu=[];var data25zu=[];var data10zu=[];var data100zu=[];
                for(var i=0;i<objlist.length;i++){
                    datezu.push(objlist[i].dtmCreate);
                    data25zu.push(objlist[i].p002==null?0:objlist[i].p002);
                    data10zu.push(objlist[i].p003==null?0:objlist[i].p003);
                    data100zu.push(objlist[i].p009==null?0:objlist[i].p009);
                }
                myChartfun(objdata,datezu,data25zu,data10zu,data100zu);
                ymainfun(objdata);
				
                $("#lidtmCreate").html("<h4 style=\"align-content: center\">实时:"+new Date(objdata.dtmCreate).format("yyyy-MM-dd hh-mm-ss")+"</h4>");
                $("#lip002").html("PM2.5值:"+(objdata.p002==null?"空数据":objdata.p002));
                $("#lip003").html("PM10值:"+(objdata.p003==null?"空数据":objdata.p003));
                $("#lip009").html("PM100值:"+(objdata.p009==null?"空数据":objdata.p009));
                $("#lip006").html("温度值:"+(objdata.p006==null?"空数据":objdata.p006));
                $("#lip007").html("湿度值:"+(objdata.p007==null?"空数据":objdata.p007));
                $("#lip005").html("风向值:"+(objdata.p005name==null?"空数据":objdata.p005name));
                $("#lip011").html("风速值:"+(objdata.p011==null?"空数据":objdata.p011));
                $("#lip008").html("噪声值:"+(objdata.p008==null?"空数据":objdata.p008));
                $("#lip010").html("气压值:"+(objdata.p0010==null?"空数据":objdata.p010));
                $("#addr").html(objdata.vAddress==''?"空数据":objdata.vAddress);
                $("#vCompany").html(objdata.vCompany==''?"空数据":objdata.vCompany);
                $("#vPhone").html(objdata.vPhone==''?"空数据":objdata.vPhone);
            }else{
                alert(data.msg);
            }
        },
        error:function(e){
            alert("异常错误"+e.message);
        }
    });
}
    $(function ($) {
        $("#equipment_id").bsSuggest({
            idField: "iEquipmentId",
            keyField: "vEquipmentName",
            searchFields: [ "vEquipmentName"],  //有效搜索字段，
            effectiveFields: ["iEquipmentId","vEquipmentName"],
            effectiveFieldsAlias:{iEquipmentId:"设备ID",vEquipmentName: "设备名称"}, //有效字段的别名对象，用于 header 的显示
            clearable: true,
            url:'Equipment_info2/Equipmentinfo2List.htm',
            processData: function(json){
                json.value=json.list
                if(json.list.length<1){
                    alert("没有设备信息!");
                }else{
                    //进入就查询一下
                   $("#equipment_id").val(json.list[0].vEquipmentName);
                    loadWorkBench();
                }
                return json;
            }
        }).on('onDataRequestSuccess', function (e, result) {
            console.log('从 json.data 参数中获取，不会触发 onDataRequestSuccess 事件', result);
        }).on('onSetSelectValue', function (e, keyword, data) {
            console.log('onSetSelectValue: ', keyword, data);
        }).on('onUnsetSelectValue', function () {
            console.log("onUnsetSelectValue");
        });

        // 基于准备好的dom，初始化柱状图echarts实例
        var myChart2 = echarts.init(document.getElementById('main'));
        option = {
            title : {
                text: '设备环境指标数据图'
                , subtext: '请选择设备'
            },
            tooltip : {
                trigger: 'axis'
            },
            legend: {
                data:['PM2.5','PM10','PM100']
            },
            toolbox: {
                show : true,
                feature : {
                    dataView : {show: true, readOnly: false},
                    magicType : {show: true, type: ['line', 'bar']},
                    restore : {show: true},
                    saveAsImage : {show: true}
                }
            },
            calculable : true,
            xAxis : [
                {
                    type : 'category',
                    data : ['设备1','设备2','设备3','设备4','设备5','设备6','设备7','设备8','设备9','设备10']
                }
            ],
            yAxis : [
                {
                    type : 'value'
                }
            ],
            series : [
                {
                    name:'PM2.5',
                    type:'bar',
                    radius: '100%',
                    data:[0, 0, 0, 0, 0, 0, 0, 0, 0,0],
                    markPoint : {
                        data : [
                            {type : 'max', name: '最大值'},
                            {type : 'min', name: '最小值'}
                        ]
                    },
                    markLine : {
                        data : [
                            {yAxis: '40', label:{normal:{show:true}}, name: 'PM2.5污染极限'}
                        ]
                    }
                },
                {
                    name:'PM10',
                    type:'bar',
                    data:[0, 0, 0, 0, 0, 0, 0, 0, 0,0],
                    markPoint : {
                        data : [
                            {type : 'max', name: '最大值'},
                            {type : 'min', name: '最小值'}
                        ]
                    },
                    markLine : {
                        data : [
                            {yAxis: '60', label:{normal:{show:true}}, name: 'PM10污染极限'}
                        ]
                    }
                },
                {
                    name:'PM100',
                    type:'bar',
                    data:[0, 0, 0, 0, 0, 0, 0, 0, 0,0],
                    markPoint : {
                        data : [
                            {name : '最高', value : 0, xAxis: 0, yAxis: 0},
                            {name : '最低', value : 0, xAxis:0, yAxis: 0}
                        ]
                    },
                    markLine : {
                        data : [
                            {yAxis: '50', label:{normal:{show:true}}, name: 'PM100污染极限'}
                        ]
                    }
                }
            ]
        };

        // 使用刚指定的配置项和数据显示图表。
        myChart2.setOption(option);


		//仪表1
        var  optiony1 = {
            tooltip : {
                formatter: "{a} <br/>{b} : {c}"
            },
            series: [
                {
                    name: '请选择设备',
                    type: 'gauge',
                    max: 150,
                    radius: '100%',
                    detail: {formatter:'{value}'},
                    axisLine: {            // 坐标轴线
                        lineStyle: {       // 属性lineStyle控制线条样式
                            color: [[0.3, '#91c7af'],[0.6, '#62879f'],[1, '#c33430']],
                            //width: 2,
                            shadowColor : '#fff', //默认透明
                            shadowBlur: 10
                        }
                    },
                    data: [{value: 0, name: '噪音'}]
                }
            ]
        };
        var meter1 = echarts.init(document.getElementById('meter1'));
        var meter2 = echarts.init(document.getElementById('meter2'));
        var meter3 = echarts.init(document.getElementById('meter3'));
        meter1.setOption(optiony1);
        meter2.setOption(optiony1);
        meter3.setOption(optiony1);
    });
function ymainfun(objdate){
	//仪表1
    var  optiony1 = {
        tooltip : {
            formatter: "{a} <br/>{b} : {c}"
        },
        series: [
            {
                name:  "设备名称:"+objdate.vEquipmentName+" "+new Date(objdate.dtmCreate).format("yyyy-MM-dd hh-mm-ss"),
                type: 'gauge',
                max: 150,
                radius: '90%',
                detail: {formatter:'{value}'},
                axisLine: {            // 坐标轴线
                    lineStyle: {       // 属性lineStyle控制线条样式
                        color: [[0.3, '#91c7af'],[0.6, '#62879f'],[1, '#c33430']],
                        //width: 2,
                        shadowColor : '#fff', //默认透明
                        shadowBlur: 10
                    }
                },
                data: [{value: objdate.p008, name: '噪音'}]
            }
        ]
    };
    var meter1 = echarts.init(document.getElementById('meter1'));
    meter1.clear();
    meter1.setOption(optiony1);
}
function myChartfun(objdate,datezu,data25zu,data10zu,data100zu) {
    // 基于准备好的dom，初始化柱状图echarts实例
    var myChart2 = echarts.init(document.getElementById('main'));
    myChart2.clear();

    option = {
        title : {
            text: '设备环境指标数据图'
           , subtext: objdate.vEquipmentName
        },
        tooltip : {
            trigger: 'axis'
        },
        legend: {
            data:['PM2.5','PM10','PM100']
        },

        tooltip : {//鼠标悬浮弹窗提示
            /*  trigger: 'axis' */
            trigger : 'item',
            show:true,
            showDelay: 0,
            hideDelay: 0,
            transitionDuration:0,
            borderRadius : 8,
            borderWidth: 2,
            padding: 10,    // [5, 10, 15, 20]
            formatter: function (params) {
                // console.log(params);
                var res = params.name;
                res += ":    "+ datezu[params.dataIndex]+"<br>"
                var myseries = option.series;
                  for (var i = 0; i < myseries.length; i++) {
                  res+= myseries[i].name+"值:   "+myseries[i].data[params.dataIndex]+"<br>";

                }
                return res;
            }
        },
        calculable : true,
        xAxis : [
            {
                type : 'category',
                data : ['时段1','时段2','时段3','时段4','时段5','时段6','时段7','时段8','时段9','时段10']
            }
        ],
        yAxis : [
            {
                type : 'value'
            }
        ],
        series : [
            {
                name:'PM2.5',
                type:'bar',
                radius: '100%',
              //  data:[2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0],
                data:data25zu,
                markPoint : {
                    data : [
                        {type : 'max', name: '最大值'},
                        {type : 'min', name: '最小值'}
                    ]
                },
                markLine : {
                    data : [
                        {yAxis: '40', label:{normal:{show:true}}, name: 'PM2.5污染极限'}
                    ]
                },
                label:{
                    normal:{formatter: '{b}:333 {c}'}
                }
            },
            {
                name:'PM10',
                type:'bar',
                //data:[2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8],
                data:data10zu,
                markPoint : {
                    data : [
                        {type : 'max', name: '最大值'},
                        {type : 'min', name: '最小值'}
                    ]
                },
                markLine : {
                    data : [
                        {yAxis: '60', label:{normal:{show:true}}, name: 'PM10污染极限'}
                    ]
                }
            },
            {
                name:'PM100',
                type:'bar',
               // data:[4.6, 3.9, 5.0, 20.4, 28.7, 70.7, 175.6, 182.2, 48.7],
                data:data100zu,
                markPoint : {
                    data : [
                        {type : 'max', name: '最大值'},
                        {type : 'min', name: '最小值'}
                    ]
                },
                markLine : {
                    data : [
                        {yAxis: '50', label:{normal:{show:true}}, name: 'PM100污染极限'}
                    ]
                }
            }
        ]
    };
    // 使用刚指定的配置项和数据显示图表。
    myChart2.setOption(option);
}
Date.prototype.format = function(fmt) {
    var o = {
        "M+" : this.getMonth()+1,                 //月份
        "d+" : this.getDate(),                    //日
        "h+" : this.getHours(),                   //小时
        "m+" : this.getMinutes(),                 //分
        "s+" : this.getSeconds(),                 //秒
        "q+" : Math.floor((this.getMonth()+3)/3), //季度
        "S"  : this.getMilliseconds()             //毫秒
    };
    if(/(y+)/.test(fmt)) {
        fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
    }
    for(var k in o) {
        if(new RegExp("("+ k +")").test(fmt)){
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
        }
    }
    return fmt;
}
var countdown=30;
var t1 ;

function dingshiguan() {

    window.clearTimeout(t1);//去掉定时器
    clearTimeout(t1)
    $("#dingshibtn").val("开启定时");
     $("#dingshibtn").unbind();
    $("#dingshibtn").bind("click",function(){
        dingshikai()
    });
    countdown=30;
    ifbo=true;
}
var ifbo=true;
function dingshikai(){
    if(ifbo){// 设置一次事件
        ifbo=false;
        $("#dingshibtn").unbind();
        $("#dingshibtn").bind("click",function(){
            dingshiguan();
        });
    }
    if (countdown == 0) {
        countdown = 30;
        loadWorkBench();//查询
    } else {
         $("#dingshibtn").val("关闭定时(" + countdown + "秒后刷新)");
         countdown--;
    }
    clearTimeout(t1)
    t1 =window.setTimeout(function() {
        dingshikai();
    },1000)

  }
</script>
</html>